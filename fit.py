import sys

import numpy as np
from scipy.optimize import minimize

# 1- 106-8
# data = {2: 8.38E-19, 4: 2.75E-19, 6: 1.18E-19, 8: 5.95E-20, 10: 3.36E-20, 12: 2.05E-20, 14: 1.33E-20, 16: 9.02E-21,
#         18: 6.37E-21, 20: 4.63E-21, 22: 3.46E-21, 24: 2.64E-21, 26: 2.05E-21, 28: 1.62E-21, 30: 1.30E-21, 32: 1.05E-21,
#         34: 8.64E-22, 36: 7.17E-22, 38: 5.99E-22, 40: 5.06E-22, 42: 4.30E-22, 44: 3.68E-22, 46: 3.17E-22, 48: 2.74E-22,
#         50: 2.39E-22, 52: 2.09E-22, 54: 1.84E-22, 56: 1.62E-22, 58: 1.44E-22, 60: 1.28E-22, 62: 1.14E-22, 64: 1.02E-22,
#         66: 9.19E-23, 68: 8.28E-23, 70: 7.48E-23, 72: 6.78E-23, 74: 6.16E-23, 76: 5.61E-23, 78: 5.12E-23, 80: 4.68E-23,
#         82: 4.29E-23, 84: 3.94E-23, 86: 3.62E-23, 88: 3.34E-23, 90: 3.08E-23, 92: 2.85E-23, 94: 2.64E-23, 96: 2.45E-23,
#         98: 2.27E-23, 100: 2.11E-23}

# 1- 106-9
data = {2: 5.58E-19, 4: 1.83E-19, 6: 7.86E-20, 8: 3.97E-20, 10: 2.24E-20, 12: 1.37E-20, 14: 8.86E-21, 16: 6.02E-21,
        18: 4.24E-21, 20: 3.09E-21, 22: 2.30E-21, 24: 1.76E-21, 26: 1.37E-21, 28: 1.08E-21, 30: 8.65E-22, 32: 7.02E-22,
        34: 5.76E-22, 36: 4.78E-22, 38: 4.00E-22, 40: 3.37E-22, 42: 2.87E-22, 44: 2.45E-22, 46: 2.11E-22, 48: 1.83E-22,
        50: 1.59E-22, 52: 1.39E-22, 54: 1.23E-22, 56: 1.08E-22, 58: 9.58E-23, 60: 8.53E-23, 62: 7.61E-23, 64: 6.82E-23,
        66: 6.13E-23, 68: 5.52E-23, 70: 4.99E-23, 72: 4.52E-23, 74: 4.11E-23, 76: 3.74E-23, 78: 3.41E-23, 80: 3.12E-23,
        82: 2.86E-23, 84: 2.63E-23, 86: 2.41E-23, 88: 2.23E-23, 90: 2.05E-23, 92: 1.90E-23, 94: 1.76E-23, 96: 1.63E-23,
        98: 1.51E-23, 100: 1.41E-23}


def fun(a, b, c, d, x):
    return (a + b / x + c / (x * x)) * (1 / (pow(x, (7.0 / 2.0 + d))))


def def_fun_to_minimize(x):
    a = x[0]
    b = x[1]
    c = x[2]
    d = x[3]

    start_e = 2
    end_e = 100
    e = start_e
    sum = 0
    while e <= end_e:
        v = fun(a, b, c, d, float(e))
        expected_v = data[e]
        sum += (v - expected_v) * (v - expected_v)
        e += 2
    return sum

for line in sys.path:
     print(line)

x0 = np.array([1.638E-16, -7.732E-16, 9.275E-16, -7.945E-02])
res = minimize(def_fun_to_minimize, x0, method='nelder-mead',
               options={'xtol': 1e-8, 'disp': True})
print(res.x)
